name: Dart CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DART_VERSION: 2.19.3

jobs:
  check-no-lints-and-todos:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: dart-lang/setup-dart@v1
      with:
        sdk: ${{ env.DART_VERSION }}
    - name: Check for no lint Errors and no TODO comments
      run: ./scripts/check_for_lint_errors_and_TODO_comments.sh

  is-formatted:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: dart-lang/setup-dart@v1
      with:
        sdk: ${{ env.DART_VERSION }}
    - name: Check that code is formatted
      run: ./scripts/check_code_is_formatted.sh

  run-remote-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: dart-lang/setup-dart@v1
      with:
        sdk: ${{ env.DART_VERSION }}
    - name: Run all tests that contact the remote Firestore database.
      env:
        FIRESTORE_CREDENTIALS: ${{ secrets.FIRESTORE_CREDENTIALS }}
      # Terraform base64 encodes the credentials so we decode them here.
      run: |
        FIRESTORE_CREDENTIALS=$(echo $FIRESTORE_CREDENTIALS | base64 --decode)
        ./scripts/run_remote_tests.sh

  # Unimplemented. See: https://github.com/SharezoneApp/cloud_firestore_server/issues/3 
  # test:
  #   runs-on: ubuntu-latest
  #   container:
  #     image:  google/dart:2.12-dev
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Run tests
  #     env:
  #       FIRESTORE_CREDENTIALS: ${{ secrets.FIRESTORE_CREDENTIALS }}
  #     run: ./scripts/run_all_tests.sh